/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CartCreateNestedManyWithoutFoodsInput } from "./CartCreateNestedManyWithoutFoodsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { OrderCreateNestedManyWithoutFoodsInput } from "./OrderCreateNestedManyWithoutFoodsInput";
import { ReviewCreateNestedManyWithoutFoodsInput } from "./ReviewCreateNestedManyWithoutFoodsInput";

@InputType()
class FoodCreateInput {
  @ApiProperty({
    required: false,
    type: () => CartCreateNestedManyWithoutFoodsInput,
  })
  @ValidateNested()
  @Type(() => CartCreateNestedManyWithoutFoodsInput)
  @IsOptional()
  @Field(() => CartCreateNestedManyWithoutFoodsInput, {
    nullable: true,
  })
  carts?: CartCreateNestedManyWithoutFoodsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isAvailable?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutFoodsInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutFoodsInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutFoodsInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutFoodsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => ReviewCreateNestedManyWithoutFoodsInput,
  })
  @ValidateNested()
  @Type(() => ReviewCreateNestedManyWithoutFoodsInput)
  @IsOptional()
  @Field(() => ReviewCreateNestedManyWithoutFoodsInput, {
    nullable: true,
  })
  reviews?: ReviewCreateNestedManyWithoutFoodsInput;
}

export { FoodCreateInput as FoodCreateInput };
